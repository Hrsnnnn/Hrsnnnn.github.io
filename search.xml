<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BasketballCart</title>
    <url>/2023/03/22/BasketballCart/</url>
    <content><![CDATA[<h3 id="球车始末"><a href="#球车始末" class="headerlink" title="球车始末"></a>球车始末</h3><p>今天收到通知，明天宿舍区检查，要求把球车处理掉。下午五点半我们应要求，将球车清理干净，并且移交环卫工人处理。</p>
<p>球车于2020年10月29日拼成，服役874天，于2023年3月22日退役。</p>
<h3 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h3><p>讲几个关于球车的记忆：</p>
<ol>
<li>2020年10月26日，我和罗锦郎教练购买球车，并于2020年10月29日下午徒手拼装而成，同时放入了第一批购买的Molten篮球。<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2023-03/BasketballCart/first.JPG"
                       width="80%" height="80%"
                ></li>
<li>2020-2021学年，某次拿球车去留学生篮球场训练，当时因为球车拉动的声音较大，受到了路过同学们的异样眼光，我感到有些不适，但同行的金煜阳队长说他从不在乎这些。最后他帮我把球车推到了场地，并且用高性能专业知识分析了球车推起来为什么声音大。</li>
<li>2020-2021学年，球车长期放置在东操北侧小卖部的旁边，有钥匙的同学随时可以去取球练球。那段时间罗教练经常带我在球场1对1特训。<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2023-03/BasketballCart/shop.png"
                       width="80%" height="80%"
                ></li>
<li>2020-2021学年，某次被要求把球车搬离东操，正赶上下雪，于是我呼叫陈旭用他电量见底的电动车把我和球车带回宿舍。<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/images/2023-03/BasketballCart/cart.png"
                       width="80%" height="80%"
                ></li>
<li>2022-2023学年，周永潇队长为了便利同学用密码锁替换原始锁，并且密码为20224。</li>
<li>2023年3月22日，今天本来想亲手把球车拆掉，想着徒手拼起来就徒手拆掉，但是很多螺丝锈死了，只好整个交给工人处理，说实话还挺不舍得。</li>
</ol>
<h3 id="展望"><a href="#展望" class="headerlink" title="展望"></a>展望</h3><p>随着球车退役，End of an era，虽然想念那时的男篮，但这个时代终要画上句号。</p>
<p>后面的人们可要重新开始咯。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>篮球</tag>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>This is a Testing Blog</title>
    <url>/2023/03/19/FirstBlog/</url>
    <content><![CDATA[<p>This is my first blog. Testing all functions existed in hexo and the redefine theme.<br>And then start to record my life.</p>
<h3 id="Some-basic-functions-provided-by-hexo"><a href="#Some-basic-functions-provided-by-hexo" class="headerlink" title="Some basic functions provided by hexo"></a>Some basic functions provided by hexo</h3><h6 id="My-favorite-lyric"><a href="#My-favorite-lyric" class="headerlink" title="My favorite lyric."></a>My favorite lyric.</h6><blockquote><p>He said one day we will leave this world behind, so live a life you will remember.</p>
<footer><strong>Avicii</strong></footer></blockquote>

<h6 id="Codeblock"><a href="#Codeblock" class="headerlink" title="Codeblock"></a>Codeblock</h6><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><figcaption><span>LabelParser</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LabelParser</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, filename</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure></div>

<!-- <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/path/to/image"
                      class="[class names]" title="[width] [height] " alt="title text"
                > -->

<hr>
<div class="note default"><p>默认 提示块标签</p>
</div>

<div class="note default"><p>default 提示块标签</p>
</div>

<div class="note primary"><p>primary 提示块标签</p>
</div>

<div class="note success"><p>success 提示块标签</p>
</div>

<div class="note info"><p>info 提示块标签</p>
</div>

<div class="note warning"><p>warning 提示块标签</p>
</div>

<div class="note danger"><p>danger 提示块标签</p>
</div>

<div class="note red icon-padding"><i class="note-icon fa-solid fa-bolt"></i><p>自定义提示块标签</p>
</div>

<h3 id="Buttons"><a href="#Buttons" class="headerlink" title="Buttons"></a>Buttons</h3><p>不设置任何参数的 <a class="button " href="https://hrsnnnn.github.io/2023/03/19/FirstBlog/" title="buttons in paragraph"><i class="fa-solid fa-play-circle /"></i> buttons in paragraph</a> 适合融入段落中。</p>
<p>regular 按钮适合独立于段落之外：</p>
<a class="button  regular" href="https://hrsnnnn.github.io" title="example button"><i class="fa-solid fa-play-circle"></i> example button</a>


<p>large 按钮更具有强调作用，建议搭配 center 使用：</p>
<a class="button  center large" href="https://hrsnnnn.github.io" title="start using"><i class="fa-solid fa-download"></i> start using</a>

<h3 id="Foldings"><a href="#Foldings" class="headerlink" title="Foldings"></a>Foldings</h3><details class="blue" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>Folding Color Blue </summary>
              <div class="content">
              <p>This is the folding article</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><figcaption><span>HelloWorld</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LabelParser</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><div class="tabs" id="tab-first-unique-name"><ul class="nav-tabs"><li class="tab active"><a class="#first-unique-name-1">First Tab</a></li><li class="tab"><a class="#first-unique-name-2">Second Tab</a></li><li class="tab"><a class="#first-unique-name-3">Third Tab</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p>
<details class="blue" data-header-exclude=""><summary><i class="fa-solid fa-chevron-right"></i>Folding Color Blue </summary>
              <div class="content">
              <p>This is the folding article</p><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><figcaption><span>HelloWorld</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LabelParser</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Hello World"</span>)</span><br></pre></td></tr></table></figure></div>
              </div>
            </details></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>tab3 is an article</strong></p></div></div></div>

<h3 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h3><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -9.28ex;" xmlns="http://www.w3.org/2000/svg" width="25.564ex" height="19.691ex" role="img" focusable="false" viewBox="0 -4601.8 11299.4 8703.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,3483.8)"><g data-mml-node="mtd" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mo" transform="translate(1055.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1555.4,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(471.8,269) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2819.4,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g><g data-mml-node="mtd" transform="translate(4153.2,0)"><g data-mml-node="mfrac"><g data-mml-node="mi" transform="translate(382.8,676)"><path data-c="1D70C" d="M58 -216Q25 -216 23 -186Q23 -176 73 26T127 234Q143 289 182 341Q252 427 341 441Q343 441 349 441T359 442Q432 442 471 394T510 276Q510 219 486 165T425 74T345 13T266 -10H255H248Q197 -10 165 35L160 41L133 -71Q108 -168 104 -181T92 -202Q76 -216 58 -216ZM424 322Q424 359 407 382T357 405Q322 405 287 376T231 300Q217 269 193 170L176 102Q193 26 260 26Q298 26 334 62Q367 92 389 158T418 266T424 322Z"></path></g><g data-mml-node="msub" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D716" d="M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z"></path></g><g data-mml-node="mn" transform="translate(439,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><rect width="1042.6" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0,1246.2)"><g data-mml-node="mtd" transform="translate(505,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mo" transform="translate(1055.2,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1555.4,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(462.8,272) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2819.4,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g><g data-mml-node="mtd" transform="translate(4153.2,0)"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-694.8)"><g data-mml-node="mtd"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mo" transform="translate(1055.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2055.4,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(471.8,269) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2819.4,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g><g data-mml-node="mtd" transform="translate(4153.2,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(222.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(1222.4,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g></g><g data-mml-node="mrow" transform="translate(419,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="1525" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0,-3152.3)"><g data-mml-node="mtd" transform="translate(5,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mo" transform="translate(1055.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2055.4,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mo" transform="translate(462.8,272) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(2819.4,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g><g data-mml-node="mtd" transform="translate(4153.2,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mn" transform="translate(636,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mrow" transform="translate(1206.2,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="28" d="M701 -940Q701 -943 695 -949H664Q662 -947 636 -922T591 -879T537 -818T475 -737T412 -636T350 -511T295 -362T250 -186T221 17T209 251Q209 962 573 1361Q596 1386 616 1405T649 1437T664 1450H695Q701 1444 701 1441Q701 1436 681 1415T629 1356T557 1261T476 1118T400 927T340 675T308 359Q306 321 306 250Q306 -139 400 -430T690 -924Q701 -936 701 -940Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(736,0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z"></path></g><g data-mml-node="mo" transform="translate(503,272) translate(-250 0)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1591.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(2591.4,0)"><g data-mml-node="mi"><path data-c="1D716" d="M227 -11Q149 -11 95 41T40 174Q40 262 87 322Q121 367 173 396T287 430Q289 431 329 431H367Q382 426 382 411Q382 385 341 385H325H312Q191 385 154 277L150 265H327Q340 256 340 246Q340 228 320 219H138V217Q128 187 128 143Q128 77 160 52T231 26Q258 26 284 36T326 57T343 68Q350 68 354 58T358 39Q358 36 357 35Q354 31 337 21T289 0T227 -11Z"></path></g><g data-mml-node="mn" transform="translate(439,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mfrac" transform="translate(3434,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g></g><g data-mml-node="mrow" transform="translate(421.5,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="1530" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(5204,0) translate(0 -0.5)"><path data-c="29" d="M34 1438Q34 1446 37 1448T50 1450H56H71Q73 1448 99 1423T144 1380T198 1319T260 1238T323 1137T385 1013T440 864T485 688T514 485T526 251Q526 134 519 53Q472 -519 162 -860Q139 -885 119 -904T86 -936T71 -949H56Q43 -949 39 -947T34 -937Q88 -883 140 -813Q428 -430 428 251Q428 453 402 628T338 922T245 1146T145 1309T46 1425Q44 1427 42 1429T39 1433T36 1436L34 1438Z"></path></g></g></g></g></g></g></g></svg></mjx-container></p>
<p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex;" xmlns="http://www.w3.org/2000/svg" width="25.832ex" height="5.018ex" role="img" focusable="false" viewBox="0 -1509.9 11417.6 2217.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g><g data-mml-node="mfrac" transform="translate(907,0)"><g data-mml-node="mi" transform="translate(400.5,676)"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="1127" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(2274,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g><g data-mml-node="mo" transform="translate(3202.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4258.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(5036.6,0)"><g data-mml-node="msup" transform="translate(384.2,676)"><g data-mml-node="mi"><path data-c="210F" d="M182 599Q182 611 174 615T133 619Q118 619 114 621T109 630Q109 636 114 656T122 681Q125 685 202 688Q272 695 286 695Q304 695 304 684Q304 682 295 644T282 597Q282 592 360 592H399Q430 592 445 587T460 563Q460 552 451 541L442 535H266L251 468Q247 453 243 436T236 409T233 399Q233 395 244 404Q295 441 357 441Q405 441 445 417T485 333Q485 284 449 178T412 58T426 44Q447 44 466 68Q485 87 500 130L509 152H531H543Q562 152 562 144Q562 128 546 93T494 23T415 -13Q385 -13 359 3T322 44Q318 52 318 77Q318 99 352 196T386 337Q386 386 346 386Q318 386 286 370Q267 361 245 338T211 292Q207 287 193 235T162 113T138 21Q128 7 122 4Q105 -12 83 -12Q66 -12 54 -2T42 26L166 530Q166 534 161 534T129 535Q127 535 122 535T112 534Q74 534 74 562Q74 570 77 576T84 585T96 589T109 591T124 592T138 592L182 595V599Z"></path></g><g data-mml-node="mn" transform="translate(646.1,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><rect width="1578" height="60" x="120" y="220"></rect></g><g data-mml-node="msup" transform="translate(6854.6,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mn" transform="translate(866,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(8124.1,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g><g data-mml-node="mo" transform="translate(8997.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(9997.6,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(10766.6,0)"><path data-c="1D713" d="M161 441Q202 441 226 417T250 358Q250 338 218 252T187 127Q190 85 214 61Q235 43 257 37Q275 29 288 29H289L371 360Q455 691 456 692Q459 694 472 694Q492 694 492 687Q492 678 411 356Q329 28 329 27T335 26Q421 26 498 114T576 278Q576 302 568 319T550 343T532 361T524 384Q524 405 541 424T583 443Q602 443 618 425T634 366Q634 337 623 288T605 220Q573 125 492 57T329 -11H319L296 -104Q272 -198 272 -199Q270 -205 252 -205H239Q233 -199 233 -197Q233 -192 256 -102T279 -9Q272 -8 265 -8Q106 14 106 139Q106 174 139 264T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 299 34 333T82 404T161 441Z"></path></g></g></g></svg></mjx-container></p>
<h3 id="Other-functions-provided-by-hexo"><a href="#Other-functions-provided-by-hexo" class="headerlink" title="Other functions provided by hexo"></a>Other functions provided by hexo</h3><p>Testing Insert Image and Videos</p>
<!-- <iframe width="80%" height="80%" src="//www.youtube.com/embed/pfD6FCZdW4Q" frameborder="0" allowfullscreen=""></iframe> -->
<iframe width="70%" height="400" src="//www.youtube.com/embed/pfD6FCZdW4Q" frameborder="0" allowfullscreen=""></iframe>

<hr>
<p><img lazyload="" src="/images/loading.svg" data-src="/images/sekiro-image.jpg" alt="An Imgur Image" title="An Image of Sekiro"></p>
<hr>
<img lazyload="" src="/images/loading.svg" data-src="/images/sekiro-dark.jpg">
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>日常</tag>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>FootGestures Paper Sumarization</title>
    <url>/2023/03/27/FootGestures/</url>
    <content><![CDATA[<h2 id="Shoe-Gestures"><a href="#Shoe-Gestures" class="headerlink" title="Shoe Gestures"></a>Shoe Gestures</h2><h3 id="Shoes-A-Smart-Detachable-Sole-for-Social-Foot-to-foot-Interaction"><a href="#Shoes-A-Smart-Detachable-Sole-for-Social-Foot-to-foot-Interaction" class="headerlink" title="Shoes++: A Smart Detachable Sole for Social Foot-to-foot Interaction"></a>Shoes++: A Smart Detachable Sole for Social Foot-to-foot Interaction</h3><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h4><p>Miniaturized sensors, advanced wireless and battery technology 可以提供强大的能力。而且脚部动作popular.</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>KickSoul: A Wearable System for Foot Interactions with Digital Devices </summary>
              <div class='content'>
              <p><strong>Point: Popularization of foot interaction.</strong></p><p><a class="link"   href="https://dl.acm.org/doi/pdf/10.1145/2815585.2815730" >https://dl.acm.org/doi/pdf/10.1145/2815585.2815730 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>Origin Article: Enabled by the miniaturized sensors, advanced wireless and battery technologies, smart soles have been integrated into our lives alongside <u>the popularization of foot interaction</u>.</li><li>Abstract: KickSoul is a wearable device that maps natural foot movements into inputs for digital devices. It consists of an insole with embedded sensors that track movements and trigger actions in devices that surround us. We present a novel approach to use our feet as input devices in mobile situations when our hands are busy. We analyze the foot’s natural movements and their meaning before activating an action.</li><li>Summary: <ul><li>是一个设备，主要能力是track脚步动作且激活周围设备。场景是在我们手部busy的时候能够用脚作为输入;</li><li>自然的脚部语义分为两类：让物体靠近自己因为需要使用 或 让物体远离自己因为不需要继续用;(设备只支持这两种动作)<ul><li>让物体靠近：保存文档；</li><li>让物体远离：删除文档;</li></ul></li><li>主要贡献：自然脚部动作map到设备、软件硬件的搭建、一系列应用;</li><li>设备：6轴的imu，将imu数据蓝牙传输到手机上，手机是脚设备和<u>最近设备</u>的桥梁;</li><li>方法：对于加速度做<code>low-pass filter</code>后利用加速度和陀螺仪进行计算;</li><li>场景：<ul><li>回家拿着东西，脚部快速开灯。</li></ul></li></ul></li></ul>
              </div>
            </details>

<p>现在的研究中，脚部的动作可以作为输入和控制计算机设备。控制的设备分为三种：Computer Devices, Activity Trackers, Physiological State Monitoring.</p>
<p>对于Computer Devices:</p>
<details class="red" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>Gaze and Foot Input: Toward a Rich and Assistive Interaction Modality </summary>
              <div class='content'>
              <p><strong>Point: A input and control method for computer devices.</strong></p><p><a class="link"   href="https://dl.acm.org/doi/pdf/10.1145/2876456.2876462" >https://dl.acm.org/doi/pdf/10.1145/2876456.2876462 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p><ul><li>Origin Article: They can serve as a supplementary input and control method for <u>computing devices</u>, activity trackers , or physiological state monitoring platforms.</li><li>Abtract:  Gaze input in conjunction with traditional solutions to the “Midas Touch” problem, dwell time or a blink, is not matured enough to be widely adopted. In this regard, we present our preliminary work, a framework that achieves precise “point and click” interactions in a desktop environment through combining the gaze and foot interaction modalities. The framework comprises of an eye tracker and a foot-operated quasi-mouse that is wearable. The system evaluation shows that our gaze and foot interaction framework performs as good as a mouse (time and precision) in the majority of tasks. Furthermore, this dissertation work focuses on the goal of realizing gaze-assisted interaction as a primary interaction modality to substitute conventional mouse and keyboard-based interaction methods. In addition, we consider some of the challenges that need to be addressed, and also present the possible solutions toward achieving our goal.</li><li>Summary:<ul><li>是一个交互模式，主要能力是配合Gaze和Foot实现一个Quasi Mouse, 实现精确的<code>point and click</code>; </li><li>Foot只是用来点击;</li></ul></li><li>Related Work:<ul><li>Gaze-supported Foot Interaction in Zoomable Information Spaces: Proving gaze and Foot can be combined, it’s promising.<ul><li>目标是结合脚步和gaze完成seamless的zoom和pan，能够很好的完成zoomable任务;</li><li>gaze的优势是precise，而脚的优势是自由;</li><li>Google Earth是能很好体现zoomable任务的应用;</li></ul></li><li>Bottom-up Investigation: Human Activity Recognition Based on Feet Movement and Posture Information<ul><li>HAR: Human Activity Recognition is active and fast growing field. (Tracking whole body activity)</li><li>Related Usage for HAR:Fall risk assessment for elderly patients and Tracking users’ dancing step.(Both related work)</li><li>Two main methods: image processing and wearable sensors.<ul><li>Image processing: expensive and privacy concern.</li><li>Wearable Sensors.</li></ul></li><li>这篇文章讲的大多是全身的activity，描述偏向整个人的状态；而我们的目标只关注feet gesture的识别。本文是一片对于HAR识别的文献综述。</li><li>本文提到的HAR:<ul><li>Common: walking, standing, running, sitting, slope walking, walking of elderly, car-passenger, bus-passenger cycling, car-driving.</li><li>Special: ball tap, heel tap, forward step, backward step.</li></ul></li></ul></li></ul></li></ul>
              </div>
            </details>

<p>Prior works of foot gestures mainly focused on single person gestures, few works of foot gestures of multiple persons is studied.</p>
<p>Steps we take:</p>
<ul>
<li>focus group study to explore the design space of social foot-to-foot gestures among two or three people. <ul>
<li>One person foot gesturing as units of foot gesture.</li>
<li>Multiple persons gesturing to each other.</li>
<li>Finally: 11 solo, 10 two-people, 10 three-people gestures.</li>
<li>From a user-centered point of view, foot-to-foot gestures in a group of two to three people create a collaborative environment and enhance emotional and social experience.</li>
</ul>
</li>
<li>Designed and fabricated a smart sole to identify and classify foot gestures<ul>
<li>Design strategy: lexible and compatible with different kind of shoes, detachable with social appropriate way, removable eletronic parts, easy to charge and replace.</li>
<li><strong>1 micro controller in each sole, 3 imu in each sole</strong>.</li>
<li>The recognition of foot gestures is performed externally by a hierarchical machine learning model based on a temporal convolutional neural network.</li>
<li>Evaluation on 18 participants wearing different type of shoes.</li>
</ul>
</li>
<li>Overall wearability of shoes++ out of the lab.<ul>
<li>Remain attached and eletrically functional for 2 hours.</li>
<li>User feel at ease with people around.</li>
<li>Detachabilty, comfort and compatability of Shoes++ met needs of daily use.</li>
</ul>
</li>
</ul>
<p>Main feature of shoes++ is can recognize foot gestures from multiple users simultaneously. (<strong>Multi-user collaboration and communication</strong>)</p>
<p>所以由此就可以设计出一个新的交互模式，就是多人利用脚去合作的模式，而且有一定的交互空间。</p>
<p>本论文主要的贡献为四点：foot-to-foot gesture vocabulary, IMU-mounted sole prototype, Gesture recognition, Validate wearablity.</p>
<h4 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h4><h5 id="Smart-Shoes-and-Accessories-for-Foot-Interaction"><a href="#Smart-Shoes-and-Accessories-for-Foot-Interaction" class="headerlink" title="Smart Shoes and Accessories for Foot Interaction"></a>Smart Shoes and Accessories for Foot Interaction</h5><p>Foot Gestures when handsfree:</p>
<ul>
<li>Gaze and foot as a mouse.</li>
<li>Virtual football game.</li>
</ul>
<h3 id="Related-Articles"><a href="#Related-Articles" class="headerlink" title="Related Articles"></a>Related Articles</h3><h4 id="Foot-Gestures"><a href="#Foot-Gestures" class="headerlink" title="Foot Gestures"></a>Foot Gestures</h4><ul>
<li>(Gesture mapping) Putting Your Best Foot Forward: Investigating Real-World Mappings for Foot-based Gestures. (Until “Result”)</li>
</ul>
<h4 id="With-Camera"><a href="#With-Camera" class="headerlink" title="With Camera"></a>With Camera</h4><ul>
<li>Foot Motion Sensing: Augmented Game Interface Based on Foot Interaction for Smartphone</li>
</ul>
<h4 id="HandsFree"><a href="#HandsFree" class="headerlink" title="HandsFree"></a>HandsFree</h4><ul>
<li>GazeTap: Towards Hands-Free Interaction in the Operating Room. (Abstract)<ul>
<li>Eye-tracking and foot tap.</li>
</ul>
</li>
<li>Foot Motion Sensing: Augmented Game Interface Based on Foot Interaction for Smartphone.</li>
</ul>
<h4 id="Important-Articles"><a href="#Important-Articles" class="headerlink" title="Important Articles"></a>Important Articles</h4><ul>
<li>Bottom-up Investigation: Human Activity Recognition Based on Feet Movement and Posture Information. (Introduction)<ul>
<li>Recognize running, standing, sitting, walking and slope walking (other basic activities).</li>
</ul>
</li>
</ul>
<h4 id="Recognition-of-Common-Movement-Activities-using-IMU"><a href="#Recognition-of-Common-Movement-Activities-using-IMU" class="headerlink" title="Recognition of Common Movement Activities using IMU"></a>Recognition of Common Movement Activities using IMU</h4><ul>
<li>Foot-mounted inertial measurement unit for activity classification. (Unread)</li>
<li>Decision-tree-based human activity classification algorithm using single-channel foot-mounted gyroscope. (Unread)</li>
<li>Saltate!: a sensor-based system to support dance beginners. (Unread)</li>
</ul>
<h4 id="Gait-Phase"><a href="#Gait-Phase" class="headerlink" title="Gait Phase"></a>Gait Phase</h4><ul>
<li>Development of gait segmentation methods for wearable foot pressure sensors. (Unread)</li>
<li>A gait monitoring system based on air pressure sensors embedded in a shoe. (Unread)</li>
<li>Gait analysis: normal and pathological function. (Unread)</li>
<li>An Overview of Smart Shoes in the Internet of Health Things: Gait and Mobility Assessment in Health Promotion and Disease Monitoring. (Until 2.1.1)<ul>
<li>Smart shoes can be envisioned to serve as <strong>pervasive wearable computing systems</strong> that enable innovative solutions and services for the promotion of healthy living and the transformation of health care.</li>
<li>人们日常走路占用了很多时间，所以采集出来可以服务于医疗。智能鞋的优势是放在predefined positions传感器、步态是规律性很强的活动能够进行分析、非侵入式和non-stigmatizing方法。</li>
<li>Mobility health. 很多健康相关的问题需要在运动非静止中进行观测。</li>
</ul>
</li>
</ul>
<p>Algothms:</p>
<ul>
<li><strong>Assessment of walking features from foot inertial sensing.</strong> (Unread)</li>
<li>Gait phase detection and discrimination between walking–jogging activities using hidden markov models applied to foot motion data from a gyroscope. (Unread)</li>
<li>Stride segmentation during free walk movements using multi-dimensional subsequence dynamic time warping on inertial sensor data. (Unread)</li>
</ul>
<p>Gait Features (Mainly from An Overview of Smart Shoes in the Internet of Health Things 2.2.3 and 2.2.4):</p>
<ul>
<li>Accuracy, sensitivity and robustness of five different methods for the estimation of gait temporal parameters using a single inertial sensor mounted on the lower trunk. (Unread)</li>
<li>Temporal feature estimation during walking using miniature accelerometers: An analysis of gait improvement after hip arthroplasty. (Unread)</li>
</ul>
<h4 id="Pervasive-Wearable-Computing-System-and-Internet-of-Things"><a href="#Pervasive-Wearable-Computing-System-and-Internet-of-Things" class="headerlink" title="Pervasive Wearable Computing System and Internet of Things"></a>Pervasive Wearable Computing System and Internet of Things</h4><ul>
<li>An Overview of Smart Shoes in the Internet of Health Things: Gait and Mobility Assessment in Health Promotion and Disease Monitoring. (Above)</li>
</ul>
<h4 id="Weak-Related-Works"><a href="#Weak-Related-Works" class="headerlink" title="Weak Related Works"></a>Weak Related Works</h4><p>Physiological state: Review on wearables to monitor foot temperature in diabetic patients. (Unread)</p>
<p>BodySensor Networks (Wireless data transfer, energy comsumption management):</p>
<ul>
<li>Body area networks: A survey. [<a class="link"   href="https://link.springer.com/article/10.1007/s11036-010-0260-8]" >https://link.springer.com/article/10.1007/s11036-010-0260-8] <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li>Enabling effective programming and flexible management of efficient body sensor network applications.</li>
<li>From modeling to implementation of virtual sensors in body sensor networks.</li>
</ul>
<p>Energy Management:</p>
<ul>
<li>Pedestrian localization based on a shoe-integrated energy autarkic mobile cyber-physical system.</li>
<li>(Energy-aware software) Approaching the accuracy–cost conflict in embedded classification system design.</li>
<li>(Harware Consumption) Considerations on design optimization criteria for windows providing low energy consumption and high visual comfort.</li>
<li>(Application Context: Lazy Mode when no data) Energy efficient multi-function home gateway in always-on home environment.</li>
<li>(Medical use should be continuous) Awearable health-monitoring system for people at risk: Methodology and modeling.</li>
<li>(Harvest Energy from context)<ul>
<li>How many wi-fi aps does it take to light a lightbulb?</li>
<li>Energy harvesting from hybrid indoor ambient light and thermal energy sources for enhanced performance ofwireless sensor nodes.</li>
</ul>
</li>
</ul>
<h3 id="Better-Understanding-of-Foot-Gestures-An-Elicitation-Study"><a href="#Better-Understanding-of-Foot-Gestures-An-Elicitation-Study" class="headerlink" title="Better Understanding of Foot Gestures: An Elicitation Study"></a>Better Understanding of Foot Gestures: An Elicitation Study</h3><p>Mattress based sensing, based on 2d platform.</p>
<p>Standing before screen, standing on projectile screen, sitting before screen.</p>
<h2 id="Knowledge-Learnt"><a href="#Knowledge-Learnt" class="headerlink" title="Knowledge Learnt"></a>Knowledge Learnt</h2><ul>
<li>Midas Touch 做的动作是无意的，但是会触发某些指令。(Distinguish natural and intended interactions.)</li>
<li>Focus Group Study 对于一组被试者进行访谈的试验方法，应用实现定义好的问题集对于目标问题进行讨论，从而获得灵感。相比于单独访谈更自然，相对于大型调查难度更低。</li>
<li>Participatory Design 尝试让所有利益相关者都能够得到满足的设计方法。</li>
</ul>
<p>transducer(传感器), behoove(理应), dissipation(耗散), infrared(红外线),</p>
]]></content>
      <tags>
        <tag>Research</tag>
        <tag>FootGesture</tag>
        <tag>Papers</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Daily (2023.3.27 to 4.2)</title>
    <url>/2023/03/27/LeetCode-Daily-3-27-4-2/</url>
    <content><![CDATA[<h3 id="2023-3-27-No-0064"><a href="#2023-3-27-No-0064" class="headerlink" title="2023.3.27 - No.0064"></a>2023.3.27 - No.0064</h3><p><strong>Problem 0064: Minimum Path Sum</strong></p>
<p>这是一个很基本的动态规划问题。</p>
<p>第一步，首先由于每个元素的值都是正的，证明从左上出发后每一次的移动必须向右走，或者向下走。因为如果向上或者向左走，一定可以找到一条和更小的路径。</p>
<p>第二步，达到每一个格子的方法只能通过其上方或者左方的格子。故建立一个二维数组记录从左上角达到该格子最小路径和，这个二维数组的每一项可以由数组<code>grid</code>推算出来：</p>
<ul>
<li>左上角的格子是<code>grid[i][j]</code>;</li>
<li>第一排的格子，只能从左边达到，故为<code>sum[i][j-1] + grid[i][j]</code>; </li>
<li>第一列的格子，只能从上方达到，故为<code>sum[i-1][j] + grid[i][j]</code>;</li>
<li>其他格子可以从左边或者上方达到，故为<code>min(sum[i-1][j]+grid[i][j], sum[i][j-1]+grid[i][j]</code>;</li>
</ul>
<p>第三步，可以对于存储空间进行优化，只用一维的数组即可完成计算。代码如下：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><figcaption><span>MinPathSum</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minPathSum</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sum</span><span class="params">(grid[<span class="number">0</span>].size(), <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;grid.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;grid[i].<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span> &amp;&amp; j == <span class="number">0</span>) sum[j] = grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">0</span>) sum[j] = sum[j<span class="number">-1</span>] + grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(j == <span class="number">0</span>) sum[j] = sum[j] + grid[i][j];</span><br><span class="line">                <span class="keyword">else</span> sum[j] = <span class="built_in">min</span>(sum[j]+grid[i][j], sum[j<span class="number">-1</span>]+grid[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum[sum.<span class="built_in">size</span>()<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<p><strong>Runtime 7 ms, Beats 90.29%; Memory 9.6 MB, Beats 92.52%;</strong></p>
<h3 id="2023-3-28-No-0983"><a href="#2023-3-28-No-0983" class="headerlink" title="2023.3.28 - No.0983"></a>2023.3.28 - No.0983</h3><p><strong>Problem 0983: Minimum Cost For Tickets</strong></p>
<p>这是一个较为基本的动态规划问题。</p>
<p>建立<code>dp</code>数组，其中<code>dp[i]</code>表示截止第<code>i</code>天花费最少的钱数。可以证明数组<code>dp</code>是一个单调非减的数组。</p>
<p>对于出行的第<code>i</code>天，有三个方法可以买票，分别为：</p>
<ul>
<li>购买第<code>i</code>天的票，则<code>dp[i] = dp[i-1] + costs[0]</code>;</li>
<li>购买第<code>i-6 to i-1</code>天的<code>7-day pass</code>，而由于数组单调非减，最划算就是再第<code>i-6</code>天购买<code>7-day pass</code>，故有<code>dp[i] = dp[i-7] + costs[1]</code>;</li>
<li>购买第<code>i-29 to i-1</code>天的<code>30-day pass</code>，同理<code>dp[i] = dp[i-30] + costs[2]</code>;</li>
</ul>
<p>故可以推导出递归公式，再考虑边界情况：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><figcaption><span>MinPathSum</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">mincostTickets</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; days, vector&lt;<span class="type">int</span>&gt;&amp; costs)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> lastday = days[days.<span class="built_in">size</span>()<span class="number">-1</span>];</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(lastday, <span class="number">0</span>)</span></span>;</span><br><span class="line">        <span class="type">int</span> day_idx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;dp.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == days[day_idx]<span class="number">-1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) dp[i] = <span class="built_in">min</span>(<span class="built_in">min</span>(costs[<span class="number">0</span>], costs[<span class="number">1</span>]), costs[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i &lt; <span class="number">7</span>) dp[i] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>]+costs[<span class="number">0</span>], costs[<span class="number">1</span>]), costs[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(i &lt; <span class="number">30</span>) dp[i] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>]+costs[<span class="number">0</span>], dp[i<span class="number">-7</span>]+costs[<span class="number">1</span>]), costs[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">else</span> dp[i] = <span class="built_in">min</span>(<span class="built_in">min</span>(dp[i<span class="number">-1</span>]+costs[<span class="number">0</span>], dp[i<span class="number">-7</span>]+costs[<span class="number">1</span>]), dp[i<span class="number">-30</span>]+costs[<span class="number">2</span>]);</span><br><span class="line">                day_idx += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i] = i == <span class="number">0</span> ? <span class="number">0</span> : dp[i<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[dp.<span class="built_in">size</span>()<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<p><strong>Runtime 2 ms, Beats 83.48%; Memory 9.6 MB, Beats 81.2%;</strong></p>
<h3 id="2023-3-29-No-1402"><a href="#2023-3-29-No-1402" class="headerlink" title="2023.3.29 - No.1402"></a>2023.3.29 - No.1402</h3><p><strong>Problem 1402: Reducing Dishes</strong></p>
<p>这个问题看起来较为简单，因为大的数一定会放到后面，所以首先对于数组进行排序。然后列举所有的可能性最终比较即可。</p>
<p>代码如下：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><figcaption><span>ReduceDishes</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxSatisfaction</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; satisfaction)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(satisfaction.<span class="built_in">begin</span>(), satisfaction.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;satisfaction.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">            <span class="type">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;satisfaction.<span class="built_in">size</span>();j++) &#123;</span><br><span class="line">                tmp += (j - i + <span class="number">1</span>) * satisfaction[j];</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">            res = <span class="built_in">max</span>(res, tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<p><strong>Runtime 16 ms, Beats 71%; Memory 8.1 MB, Beats 77.38%;</strong></p>
<p>可以对于复杂度进行进一步优化，数学上容易证明上下两种方法等价，此处略去：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><figcaption><span>BetterSolution</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maxSatisfaction</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">reverse</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;nums.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            res = <span class="built_in">max</span>(res, res + sum + nums[i]);</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res; </span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<p><strong>Runtime 0 ms, Beats 100%; Memory 8.3 MB, Beats 74.79%;</strong></p>
<h3 id="2023-3-30-No-0087"><a href="#2023-3-30-No-0087" class="headerlink" title="2023.3.30 - No.0087"></a>2023.3.30 - No.0087</h3><p><strong>Problem 0087: Scramble String</strong></p>
<p>注意到一个string能够通过scramble操作变化得到的必要条件是，这两个string的字母组成是相同的，于是通过函数进行判断：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><figcaption><span>isMatch</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">ismatch</span><span class="params">(string s1, string s2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s1.<span class="built_in">size</span>() != s2.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">sort</span>(s1.<span class="built_in">begin</span>(), s1.<span class="built_in">end</span>());</span><br><span class="line">    <span class="built_in">sort</span>(s2.<span class="built_in">begin</span>(), s2.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++) <span class="keyword">if</span>(s1[i] != s2[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>然后我们利用分而治之的思路对于两个string进行分割，然后再对于分割的两个string进行同样的判断操作。代码如下：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><figcaption><span>ScrambleString</span></figcaption><table><tr><td class="code"><pre><span class="line">Class Solution &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    map&lt;string, <span class="type">bool</span>&gt; mp;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">ismatch</span><span class="params">(string s1, string s2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1.<span class="built_in">size</span>() != s2.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">sort</span>(s1.<span class="built_in">begin</span>(), s1.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">sort</span>(s2.<span class="built_in">begin</span>(), s2.<span class="built_in">end</span>());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++) <span class="keyword">if</span>(s1[i] != s2[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">match</span><span class="params">(string s1, string s2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mp.<span class="built_in">count</span>(s1+<span class="string">&quot; &quot;</span>+s2)) <span class="keyword">return</span> mp[s1+<span class="string">&quot; &quot;</span>+s2]; </span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">ismatch</span>(s1, s2)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(s1.<span class="built_in">size</span>() == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s1.<span class="built_in">size</span>();i++) &#123;</span><br><span class="line">            <span class="type">int</span> split = i;                                  <span class="comment">// 从split位置进行分割</span></span><br><span class="line">            string s1front = s1.<span class="built_in">substr</span>(<span class="number">0</span>, split);           <span class="comment">// 对s1在split位置进行分割</span></span><br><span class="line">            string s1back = s1.<span class="built_in">substr</span>(split);</span><br><span class="line">            string s2front_front = s2.<span class="built_in">substr</span>(<span class="number">0</span>, split);     <span class="comment">// 如果对于s1的最后一次scramble操作不需要交换，则s1的前半部分和s2的前半部分需要match</span></span><br><span class="line">            string s2front_back = s2.<span class="built_in">substr</span>(split);</span><br><span class="line">            string s2back_front = s2.<span class="built_in">substr</span>(<span class="number">0</span>, s2.<span class="built_in">size</span>()-split);    <span class="comment">// 如果对于s1的最后一次scramble操作需要交换，则s1的前半部分和s2的后半部分需要match</span></span><br><span class="line">            string s2back_back = s2.<span class="built_in">substr</span>(s2.<span class="built_in">size</span>()-split);</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">match</span>(s1front, s2front_front) &amp;&amp; <span class="built_in">match</span>(s1back, s2front_back) || <span class="built_in">match</span>(s1front, s2back_back) &amp;&amp; <span class="built_in">match</span>(s1back, s2back_front)) &#123;        <span class="comment">// 对于s1和s2的两部分分别进行判断</span></span><br><span class="line">                mp.<span class="built_in">insert</span>(&#123;s1+<span class="string">&quot; &quot;</span>+s2, <span class="literal">true</span>&#125;);                       <span class="comment">// 对于已经计算过的string pair进行记录，降低计算成本</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mp.<span class="built_in">insert</span>(&#123;s1+<span class="string">&quot; &quot;</span>+s2, <span class="literal">false</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isScramble</span><span class="params">(string s1, string s2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">match</span>(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><strong>Runtime 20 ms, Beats 82.74%; Memory 16.1 MB, Beats 78.89%;</strong></p>
]]></content>
      <categories>
        <category>LeetCode</category>
      </categories>
      <tags>
        <tag>LeetCode</tag>
        <tag>C++</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>Thoughts After Leaving Tencent. Temporarily?</title>
    <url>/2023/09/24/Thoughts-After-Leaving-Tencent-Temporarily/</url>
    <content><![CDATA[<h3 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h3><p>一直想写点东西，我的Notion文档中一直又一片空白的文档名字是《2023.6.30半年总结》。一直逃避写点东西，不是因为脑子是空的，而是因为这一阵子想了太多事情，而且拖延症一直严重，或者说总想保持一些写作的仪式感，必须在一些重要的时间节点再做一些严肃的自我审视和思考整理。意图是好的，造成就是无休止的拖延。不过，学生和工作的转换，即使是拖延症晚期的人也无法逃避，于是就在这个周末中，我终于打开文档，开始写点东西。</p>
<h3 id="Internship"><a href="#Internship" class="headerlink" title="Internship"></a>Internship</h3><p>先从最近发生的变化说起吧，今天是2023年9月24日，距离我正式以实习生身份离职腾讯还有一天，明天我将结束我接近半年的实习之旅。朋友圈的文案我都想好了，主要就是三个词“不舍”，“感恩”，“期待”，分别代表着过去、现在、和未来。</p>
<p>不舍的情绪是复杂的。我感觉从读了研究生之后，专业技能没啥提升，但对于自己的剖析还算有些进步，尤其看待事情的方法不再片面和单一，反而变得比较多元化。对于实习的不舍是复杂的，正面来讲，我所在的团队是一个很棒的团队，这半年受大家的照顾很多；所做的工作是我很喜欢的方向；同时，正在做的项目是一个很大的ip，也是我非常非常喜欢的项目。负面来讲，不舍的是这一段稳定且规律的生活，当你每天都有明确的任务，着眼于最底层的bug和业务逻辑时，你会有很强的即时成就感，而这种感觉往往导致舒适的。而我的不舍的其中一部分原因就是这种简单的舒适感，而这种感觉就是温水煮青蛙。</p>
<p>意识到这一点，尤其是每天下班从公司骑车回家的路上，我都会进行每一天的自我反省，并且思考未来的要如何规划。自认为自我反省是做的比较好的，很多事情第一时间的认知都是有偏差的，受主观情绪影响的，但反省让我能更理性的认识自己，认识与这个世界相处的方法。而对于未来的规划却很迷茫，没有什么可以抓住的线头。初始的几个月是痛苦的，但后面我突然意识到，我还是一个对于行业没有认知的小白，这个时候去计划几年后的事情，是不是过于的自负了。行业的变化，大环境的变化都是不可预测且影响深远的，总结下来在没有对于行业有很深刻认知的时候，能做的事情有：</p>
<ul>
<li>加强自己的技术力，跳出底层的业务代码，在技术上做总体上的规划；</li>
<li>了解行业职业发展架构，尽力找到自己的模版，在此基础上找到自己的出路；</li>
<li>学好英语，考雅思或者托福，并且获得较好的成绩；</li>
<li>参加或者关注行业内的活动和比赛，有能力就参加；</li>
<li>建立圈子，与公司和学校的人保持联系，锻炼领导力和凝聚人的能力；</li>
<li>（整理自己想做的事情，随缘记录）；</li>
</ul>
<p>想的很好，落实起来就看自己的执行力有多少了。</p>
<h3 id="Thoughts"><a href="#Thoughts" class="headerlink" title="Thoughts"></a>Thoughts</h3><p>虽然我学生时代对于社会和生活的理想与期待，已经在研究生被粉碎的所剩无几，但是不得不说在腾讯的这一段时间让我看到了一丝希望，即使这希望还是如此渺小，也足够让我珍惜这样宝贵的机会。也正是在这段时间中，我慢慢在恢复丢失已久的学习能力和专业能力，虽然还有很多事情需要追赶，但起步了就还好。说起来，研究生三年过得真不像一个计算机的学生，代码写得太少，技术上一退再退，甚至不如本科的能力；我能清晰的感觉到自己脑子的退化，无法长时间专注，无法逃离娱乐的陷阱，知难而退，犹豫不决；这些毛病，我一直看不上的毛病在这几年中纷纷都得到了。</p>
<p>与对待写作一样，面对这些毛病，我总是想在遇到一个重要时间节点再集中改变，但从研一到现在，有那么多的时间节点有哪个真正做出改变了呢？只是拖延的理由罢了。有必要给自己做个短期计划单，这也是每周组会的意义所在，虽然它很痛苦，很形式，但是短期的反馈和监督是能够促进进步的，而我现在缺少这样的自我监督。从现在开始每周末，我都要主动写一个周报来记录和计划，否则就会再次陷入虚无，从本周起说到做到。</p>
<p>对待游戏，虽然从事游戏行业，但是上瘾也是万万不可的，好的解决办法就是自己做自己的游戏，然后玩一些相关的游戏来吸取灵感。即使在做游戏也不能自我催眠地认为，玩游戏就是干正事，不要陷入这种陷阱中。</p>
<h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>写完之后发现，时常写点东西是必要的，写作是能把思路整合起来的过程，是一个人能否讲明白故事的体现，显然在写这篇随笔的过程中，我的思路逻辑逻辑混乱，无法流畅地表达自己脑子里的想法。同时要多看点书，现在信息茧房严重，很多事情需要深入地进行了解，才能让自己不成为肤浅片面的人，这很重要。</p>
<p>未来的一段时间，应该要以毕业项目为主，但是同时要养成一些习惯，让自己回到正轨，年末见。</p>
]]></content>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
</search>
